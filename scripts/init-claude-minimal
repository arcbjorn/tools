#!/bin/bash

# Initialize minimal Claude Code configuration
set -e

echo "Initializing minimal Claude Code setup..."

echo "COMMIT INSTRUCTIONS: use conventional commits guidelines, 1 GRANULAR COMMIT PER 1 GOAL, MESSAGE 50 CHARACTERS MAX, NO DESCRIPTION" >CLAUDE.md
echo "
### Always Use Standard CLI Tools Whenever Possible
- **Use official CLI tools for ALL tasks**, not just initialization
- **Go Backend**: Use \`go mod init\` to initialize Go modules, \`go get\` for dependencies
- **React Frontend**: Use \`pnpm create vite@latest my-app -- --template react\`
- **Alpine.js**: \`pnpm init vite@latest my-alpine-app -- --template vanilla-ts\`
- ALWAYS use \`pnpm\` instead of \`npm\`
- ALWAYS use Typescript instead of Javascript
- **Svelte**: \`npx sv create my-app\`
- **Rust**: \`cargo new\`, \`cargo add\`, \`cargo check\`, \`cargo test\`
- **Zig**: \`zig init\`, \`zig build\`, \`zig test\`
- **Ruby**: \`bundle init\`, \`bundle add gem_name\`, \`bundle install\`, \`bundle exec\`
- **Ruby on Rails**: \`rails new my_app\`, \`rails generate scaffold ModelName\`, \`rails db:migrate\`
- **Elixir**: \`mix new my_app\`, \`mix phx.new my_app\` (for Phoenix), \`mix deps.get\`, \`mix test\`
- **Never manually create package.json or go.mod files**
- **ALWAYS use official scaffolding tools
- **ALWAYS use language-specific package managers and build tools\`" >>CLAUDE.md

# Create or update .gitignore
if [ -f .gitignore ]; then
  # Check if CLAUDE.md is already ignored
  if ! grep -q "CLAUDE.md" .gitignore; then
    echo "CLAUDE.md" >>.gitignore
    echo "Added CLAUDE.md to existing .gitignore"
  else
    echo "CLAUDE.md already in .gitignore"
  fi
else
  # Create new .gitignore
  echo "CLAUDE.md" >.gitignore
  echo "Created .gitignore with CLAUDE.md"
fi

echo "Claude Code minimal setup complete!"
echo "- CLAUDE.md created with commit instructions"
echo "- CLAUDE.md added to .gitignore"
